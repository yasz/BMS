@page "/"
@inject BookService BookService
@inject IJSRuntime JSRuntime

<input id="myInput" class="form-control" value="@inputValue" placeholder="@message" @onkeypress="@(e => OnKeyDown(e))" @oninput="@(e => OnTextChanged(e))"  />
<p>WELCOME: @vano</p>
<button type="button" class="btn btn-primary" @onclick="@(e => Focus(e))">
    TestJS
</button>
@code {
    
    string message = "请扫描学号";
    string inputValue = "";
    string vano = "";
    
    protected async override void OnAfterRender(bool firstRender)
    {
        string controlId = "myInput";
        var obj = await JSRuntime.InvokeAsync<string>(
            "MySetFocus", controlId);
    }
    
    private async void Focus(EventArgs e)
    {
        string controlId = "myInput";
        var obj = await JSRuntime.InvokeAsync<string>(
            "MySetFocus", controlId);
    }
    private async Task OnKeyDown(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {

            if (string.IsNullOrEmpty(vano))
            {
                vano = inputValue;
                inputValue = "";
                message = "请扫描书籍编号";
            }
            else
            {
                await BookService.AddRent(inputValue, vano);
                var obj = await JSRuntime.InvokeAsync<string>("MyPop","借阅成功"+vano+":"+inputValue);
                vano = "";
                inputValue = "";
                
            }
        }
    }
    private void OnTextChanged(ChangeEventArgs e)
    {
        inputValue = e.Value as string;
    }

}
